{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\Desktop\\\\VS Code\\\\LFS Recent\\\\frontend\\\\src\\\\components\\\\EmailVerify\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailVerify = () => {\n  _s();\n  const {\n    id,\n    token\n  } = useParams();\n  const [validUrl, setValidUrl] = useState(true);\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        // Make an API call to verify the email\n        const response = await axios.get(`http://localhost:8080/api/users/${id}/verify/${token}`);\n        console.log(response.data); // Log the response data\n        setValidUrl(true); // Set validUrl state to true if successful\n      } catch (error) {\n        console.error(error);\n        setValidUrl(false); // Set validUrl state to false if there's an error\n      }\n    };\n\n    verifyEmail(); // Call the email verification function\n  }, [id, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: validUrl ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Email Verified Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Invalid Verification Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailVerify, \"yXetpbjaLuV7DcKQ/zXVTeKlxpY=\", false, function () {\n  return [useParams];\n});\n_c = EmailVerify;\nexport default EmailVerify;\nvar _c;\n$RefreshReg$(_c, \"EmailVerify\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","EmailVerify","_s","id","token","validUrl","setValidUrl","verifyEmail","response","get","console","log","data","error","children","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mohit/Desktop/VS Code/LFS Recent/frontend/src/components/EmailVerify/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Import Axios for API requests\r\n\r\nconst EmailVerify = () => {\r\n  const { id, token } = useParams();\r\n  const [validUrl, setValidUrl] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const verifyEmail = async () => {\r\n      try {\r\n        // Make an API call to verify the email\r\n        const response = await axios.get(`http://localhost:8080/api/users/${id}/verify/${token}`);\r\n        console.log(response.data); // Log the response data\r\n        setValidUrl(true); // Set validUrl state to true if successful\r\n      } catch (error) {\r\n        console.error(error);\r\n        setValidUrl(false); // Set validUrl state to false if there's an error\r\n      }\r\n    };\r\n\r\n    verifyEmail(); // Call the email verification function\r\n  }, [id, token]);\r\n\r\n  return (\r\n    <div>\r\n      {validUrl ? (\r\n        <Fragment>\r\n          {/* Email verified successfully */}\r\n          <h1>Email Verified Successfully</h1>\r\n          {/* Additional content or redirection upon successful verification */}\r\n        </Fragment>\r\n      ) : (\r\n        <h1>Invalid Verification Link</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailVerify;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,EAAE;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,mCAAkCN,EAAG,WAAUC,KAAM,EAAC,CAAC;QACzFM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAC5BN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACpBP,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;;IAEDC,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,EAAE,EAAEC,KAAK,CAAC,CAAC;EAEf,oBACEJ,OAAA;IAAAc,QAAA,EACGT,QAAQ,gBACPL,OAAA,CAACe,QAAQ;MAAAD,QAAA,eAEPd,OAAA;QAAAc,QAAA,EAAI;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,gBAEXnB,OAAA;MAAAc,QAAA,EAAI;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,WAAW;EAAA,QACOJ,SAAS;AAAA;AAAAuB,EAAA,GAD3BnB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}